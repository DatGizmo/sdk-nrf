@Library("CI_LIB") _
HashMap CI_STATE = lib_State.getConfig(JOB_NAME)

pipeline {
  parameters{
    booleanParam(name: 'RUN_DOWNSTREAM', description: 'if false skip downstream jobs', defaultValue: true)
    booleanParam(name: 'RUN_TESTS', description: 'if false skip testing', defaultValue: true)  // what is a purpose of RUN_TESTS?
    booleanParam(name: 'RUN_BUILD', description: 'if false skip building', defaultValue: true)
    string(name: 'jsonstr_CI_STATE', description: 'Default State if no upstream job', defaultValue: CI_STATE.CFG.INPUT_STATE_STR)
    choice(name: 'TEST_CYCLE', description: 'Test Phase', choices: CI_STATE.CFG.CRON_CHOICES)
  }    

  agent {
    label 'build-ncs'
  }
  stages {
    stage('Report ci status') {
      steps {
        script {
          CI_STATE = lib_State.load('NRF', CI_STATE)
          if (CI_STATE.SELF.BUILD_TYPE == "PR") {
            lib_Status.set('SUCCESS', 'twister', CI_STATE, 'twister dummy report')
            int prnr = CI_STATE.SELF.CHANGE_ID as int
            if(0 == prnr % 2)
            {
              lib_Status.set('SUCCESS', 'integration', CI_STATE, 'integration dummy report')
            }
            else
            {
              lib_Status.set('NEUTRAL', 'integration', CI_STATE, 'integration skipped dummy report')
            }
          }
          else {
            println("Not a PR nothing to do here")
          }
        }
      }
    }
  }
}
