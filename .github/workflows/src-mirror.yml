name: src-mirror
on:
  push:
    tags:
      - '*'

jobs:
  zip-and-upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: nrfconnect/action-checkout-west-update@main
        with:
          git-fetch-depth: 0
          path: workspace/nrf
          west-update-args: '--group-filter=+babblesim,+sidewalk'

      - name: Configure git and run garbage collection
        run: |
          cd workspace/nrf
          git config --global pack.windowMemory "32m" &&
          west forall -c 'git gc --prune --aggressive'

      - name: Create tar archive
        run: |
          tar -C ./workspace -czvf src.tar.gz .

      - name: Set up JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4

      - name: Configure and Upload to Artifactory
        env:
          ARTIFACTORY_URL: https://eu.files.nordicsemi.com/artifactory
          REPOSITORY: ncs-src-mirror
          FILE_PATH: src.tar.gz
          TARGET_PATH: external/${{ github.ref_name }}/
        run: >
          jfrog rt u $FILE_PATH $REPOSITORY/$TARGET_PATH
          --url=$ARTIFACTORY_URL
          --user=${{ secrets.COM_NORDICSEMI_FILES_USERNAME }}
          --password=${{ secrets.COM_NORDICSEMI_FILES_PASSWORD }}

      - name: Create and distribute release bundle
        env:
          ARTIFACTORY_URL: https://eu.files.nordicsemi.com
          SRC_PATH: ncs-src-mirror/external/${{ github.ref_name }}
          VERSION: ${{ github.ref_name }}
        run: >
          jfrog c add temp --interactive=false --url=$ARTIFACTORY_URL --user=${{ secrets.COM_NORDICSEMI_FILES_USERNAME }} --password=${{ secrets.COM_NORDICSEMI_FILES_PASSWORD }}
          jfrog c use temp

          jfrog ds release-bundle-create src-mirror "$VERSION" "$SRC_PATH/**"
          if [[ "$?" != "0" ]]; then
              echo "Error createing release bundle" && exit 1
          fi
          jfrog ds release-bundle-sign src-mirror "$VERSION"
          if [[ "$?" != "0" ]]; then
              echo 'Error signing release bundle' && exit 1
          fi
          jfrog ds release-bundle-distribute src-mirror "$VERSION" --create-repo --country-codes 'CN'
          [[ "$?" != "0" ]] && echo 'Error distributing release bundle' && exit 1

          jfrog c rm temp
